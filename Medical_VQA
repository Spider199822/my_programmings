srcFile  = dir('C:\Users\B\Desktop\img_sharif_scripts_main\*.png');%your address file of your medical images

for i=1:length(srcFile)
    filename = strcat('C:\Users\B\Desktop\img_sharif_scripts_main\',srcFile(i).name); %your address of medical images
    I = imread(filename);
    A(:,:,:,i)=I;
end    

C1 = [12,1,1,1,2,1,1,1,1,1,2,1,1,1,1,1,10,10,6,6,1,1,1,1,1,1,2,1,1,1,7,7,5,5,6,6,6,1,4,4,4,4,4,4,4,7,11,8,2,6,4,7,1,1,1,1,1,1,1,13,13,5,5,5,5,13,12,12,2,1,1,1,1,1,11,11,4,4,4,4,4,4,4,5,1,3,3,3,1,2,6,6,4,4,10,10,10,3,3,4];
C2 = categorical(C1);
C3 = [3,2,2,1,2,1,2,4,-1,-1,1,-1,-1,-1,-1,-1,3,4,4,3,3,3,3,1,3,1,1,2,3,3,4,4,4,4,4,3,4,4,3,3,3,3,3,3,3,3,4,1,1,3,4,1,1,4,1,4,1,1,1,1,3,4,3,3,2,4,3,3,3,1,4,1,2,2,2,3,2,2,3,4,2,3,2,1,2,1,1,1,2,1,2,2,3,3,2,2,2,1,1,2];
TC2 = transpose(C2);%convert a oneD array to vector
TC3 = transpose(C3);
B = cast(A,'double'); 
%C1 is the labels and C2 is the output
%this code is an example for image augmentation 
%[XTrain,YTrain] = digitTrain4DArrayData;
%first_mul_img
%XTrain = B;
%YTrain = TC2;
%imageAugmenter = imageDataAugmenter( ...
    %'RandRotation',[-20,20], ...
    %'RandXTranslation',[-3 3], ...
    %'RandYTranslation',[-3 3])%               changable

%imageSize = [224 224 1];
%augimds = augmentedImageDatastore(imageSize,XTrain,YTrain,'DataAugmentation',imageAugmenter);
%minibatch = read(augimds);
%imshow(uint8(imtile(minibatch.input)))
%minibatch this "minibatch is table convert it to cells then do read images"
%K = minibatch{:,1}; K-> is cell variable
%K{1,1} checking data image augment
%for i=1:100
%D(:,:,:,i) = K{i,1};
%end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%augmentation data
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%1000 image
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% the next start the augmentation of 900 image data
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% you can see the augmentation parameters in link "https://www.mathworks.com/help/deeplearning/ref/imagedataaugmenter.html"
%[XTrain,YTrain] = digitTrain4DArrayData;
% XTrain = B;
% YTrain = TC2;
% imageAugmenter = imageDataAugmenter('RandXReflection',1);  
% imageSize = [224 224 1];
% augimds = augmentedImageDatastore(imageSize,XTrain,YTrain,'DataAugmentation',imageAugmenter);
% minibatch = read(augimds);
% imshow(uint8(imtile(minibatch.input)))
% K = minibatch{:,1};
% for i=1:100
% C(:,:,:,i) = K{i,1};
% end
% imageAugmenter = imageDataAugmenter('RandYReflection',1);  
% imageSize = [224 224 1];
% augimds = augmentedImageDatastore(imageSize,XTrain,YTrain,'DataAugmentation',imageAugmenter);
% minibatch = read(augimds);
% imshow(uint8(imtile(minibatch.input)))
% K = minibatch{:,1};
% for i=1:100
% D(:,:,:,i) = K{i,1};
% end
% imageAugmenter = imageDataAugmenter('RandRotation',[-45 45]);
% imageSize = [224 224 1];
% augimds = augmentedImageDatastore(imageSize,XTrain,YTrain,'DataAugmentation',imageAugmenter);
% minibatch = read(augimds);
% imshow(uint8(imtile(minibatch.input)))
% K = minibatch{:,1};
% for i=1:100
% E(:,:,:,i) = K{i,1};
% end
% imageAugmenter = imageDataAugmenter('RandScale',[0.5 2]);
% imageSize = [224 224 1];
% augimds = augmentedImageDatastore(imageSize,XTrain,YTrain,'DataAugmentation',imageAugmenter);
% minibatch = read(augimds);
% imshow(uint8(imtile(minibatch.input)))
% K = minibatch{:,1};
% for i=1:100
% F(:,:,:,i) = K{i,1};
% end
% imageAugmenter = imageDataAugmenter('RandXScale',[0.25 0.5]);
% imageSize = [224 224 1];
% augimds = augmentedImageDatastore(imageSize,XTrain,YTrain,'DataAugmentation',imageAugmenter);
% minibatch = read(augimds);
% imshow(uint8(imtile(minibatch.input)))
% K = minibatch{:,1};
% for i=1:100
% G(:,:,:,i) = K{i,1};
% end
% imageAugmenter = imageDataAugmenter('RandYScale',[0.25 0.5]);
% imageSize = [224 224 1];
% augimds = augmentedImageDatastore(imageSize,XTrain,YTrain,'DataAugmentation',imageAugmenter);
% minibatch = read(augimds);
% imshow(uint8(imtile(minibatch.input)))
% K = minibatch{:,1};
% for i=1:100
% H(:,:,:,i) = K{i,1};
% end
% imageAugmenter = imageDataAugmenter('RandXShear',[-30 30]);
% imageSize = [224 224 1];
% augimds = augmentedImageDatastore(imageSize,XTrain,YTrain,'DataAugmentation',imageAugmenter);
% minibatch = read(augimds);
% imshow(uint8(imtile(minibatch.input)))
% K = minibatch{:,1};
% for i=1:100
% J(:,:,:,i) = K{i,1};
% end
% imageAugmenter = imageDataAugmenter('RandYShear',[-45 45]);
% imageSize = [224 224 1];
% augimds = augmentedImageDatastore(imageSize,XTrain,YTrain,'DataAugmentation',imageAugmenter);
% minibatch = read(augimds);
% imshow(uint8(imtile(minibatch.input)))
% K = minibatch{:,1};
% for i=1:100
% L(:,:,:,i) = K{i,1};
% end
% imageAugmenter = imageDataAugmenter('RandXTranslation',[-2 3]);
% imageSize = [224 224 1];
% augimds = augmentedImageDatastore(imageSize,XTrain,YTrain,'DataAugmentation',imageAugmenter);
% minibatch = read(augimds);
% imshow(uint8(imtile(minibatch.input)))
% K = minibatch{:,1};
% for i=1:100
% N(:,:,:,i) = K{i,1};
% end
%after last line then you can start training process. you can use this link could help for training and testing the model "https://www.mathworks.com/help/deeplearning/ug/train-network-on-image-and-feature-data.html". 
